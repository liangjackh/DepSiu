SV_COV_ASSERTION 20
SV_COV_CHECK 3
SV_COV_ERROR -1
SV_COV_FSM_STATE 21
SV_COV_HIER 11
SV_COV_MODULE 10
SV_COV_NOCOV 0
SV_COV_OK 1
SV_COV_OVERFLOW -2
SV_COV_PARTIAL 2
SV_COV_RESET 2
SV_COV_START 0
SV_COV_STATEMENT 22
SV_COV_STOP 1
SV_COV_TOGGLE 23
__slang__ 1
__slang_major__ 8
__slang_minor__ 1
parse name: <class 'pyslang.IdentifierNameSyntax'>
configRoot: None
defaultLibrary: <pyslang.SourceLibrary object at 0x70496fef10f0>
trees amount: 1
type of tree: <class 'pyslang.SyntaxTree'>
[print tree end] ............................
root name: $root type: <class 'pyslang.RootSymbol'>
instance: top type: <class 'pyslang.InstanceSymbol'>
        body: Symbol(SymbolKind.InstanceBody, "top")
        body type: <class 'pyslang.InstanceBodySymbol'>
        array name: top
        array path: []
syntaxTreeNode: <pyslang.SyntaxTree object at 0x704970032cb0>
modules type: <class 'list'>
module type: <class 'pyslang.DefinitionSymbol'>
queue hierachicalPath: queue
queue lexicalPath: queue
queue  syntax type: <class 'pyslang.ModuleDeclarationSyntax'>
[visitor] node type: <class 'pyslang.DefinitionSymbol'>, kind: SymbolKind.Definition
proceduralBlockSymbol count: 0
definitionsymbol count: 1
module type: <class 'pyslang.DefinitionSymbol'>
top hierachicalPath: top
top lexicalPath: top
top  syntax type: <class 'pyslang.ModuleDeclarationSyntax'>
[visitor] node type: <class 'pyslang.DefinitionSymbol'>, kind: SymbolKind.Definition
proceduralBlockSymbol count: 0
definitionsymbol count: 2
modules:[DefinitionSymbol("queue"), DefinitionSymbol("top")]
successful_compilation: True
reportMacros:
[main]my_visitor_for_symbol: <helpers.slang_helpers.SymbolicDFS object at 0x704970351730>
Executing for 1 clock cycles
sv_module_name: queue
type of queue: <class 'pyslang.DefinitionSymbol'>
instanceCount of a module: 2
init run sv
[count_conditionals_sv] queue defaultNetType: Symbol(SymbolKind.NetType, "wire")
[count_conditionals_sv] definitionKind: DefinitionKind.Module
[count_conditionals_sv] definitionKind.value: 0
[count_conditionals_sv] decalredType: None
[count_conditionals_sv] declaringDefinition: None
[count_conditionals_sv] hierarchicalPath: queue
[count_conditionals_sv] kind : SymbolKind.Definition
[count_conditionals_sv] articleKind: <bound method PyCapsule.getArticleKindString of DefinitionSymbol("queue")>
[count_conditionals_sv] queue syntax kind : <bound method PyCapsule.__getitem__ of SyntaxNode(SyntaxKind.ModuleDeclaration)>
[count_conditionals_sv] next_sibling: None
module_count_sv:
name: module
sv_module_name: top
type of top: <class 'pyslang.DefinitionSymbol'>
instanceCount of a module: 0
init run sv
[count_conditionals_sv] top defaultNetType: Symbol(SymbolKind.NetType, "wire")
[count_conditionals_sv] definitionKind: DefinitionKind.Module
[count_conditionals_sv] definitionKind.value: 0
[count_conditionals_sv] decalredType: None
[count_conditionals_sv] declaringDefinition: None
[count_conditionals_sv] hierarchicalPath: top
[count_conditionals_sv] kind : SymbolKind.Definition
[count_conditionals_sv] articleKind: <bound method PyCapsule.getArticleKindString of DefinitionSymbol("top")>
[count_conditionals_sv] top syntax kind : <bound method PyCapsule.__getitem__ of SyntaxNode(SyntaxKind.ModuleDeclaration)>
[count_conditionals_sv] next_sibling: None
module_count_sv:
name: module
[execute_sv]Branch points explored: 0
Total paths: 1
------------------------
initializing state
params: set()
ports: set()
merging states..
module name: <class 'str'>
not a symbol, but <class 'str'>
module name: <class 'str'>
not a symbol, but <class 'str'>
[SlangSymbolVisitor.visit]Visiting symbol: queue of kind SymbolKind.Definition
[SlangSymbolVisitor.visit]Symbol ID: 0, Source Range: <pyslang.SourceRange object at 0x70496fef3130>
[SlangSymbolVisitor.visit]Visiting symbol: top of kind SymbolKind.Definition
[SlangSymbolVisitor.visit]Symbol ID: 1, Source Range: <pyslang.SourceRange object at 0x70496fef3470>
symbol_visitor branches:0
symbol_visitor paths:0
Elapsed time 0.01319670499999992
